import Head from "next/head";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";

import Header from "@components/Header";
import Container from "@components/Container";
import Product from "@components/Product";

import styles from "@styles/Home.module.scss";
import Layout from "@components/Layout";

export default function Home({ products }) {
  return (
    <Layout>
      <Head>
        <title>Strange Wilderness Granola</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Container>
        <h1>Strange Wilderness Granola</h1>
        <p>Get Wierd with Your Granola</p>
        <h2>Available Flavors</h2>
        <ul className={styles.products}>
          {products.map((product) => {
            return <Product key={product.id} product={product} />;
          })}
        </ul>
      </Container>
    </Layout>
  );
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: "http://44.197.223.104/graphql",
    cache: new InMemoryCache(),
  });

  const response = await client.query({
    query: gql`
      query AllProducts {
        products {
          edges {
            node {
              id
              content
              uri
              title
              product {
                productPrice
                productId
              }
              slug
              featuredImage {
                node {
                  altText
                  sourceUrl
                  mediaDetails {
                    height
                    width
                  }
                }
              }
            }
          }
        }
      }
    `,
  });

  const products = response.data.products.edges.map(({ node }) => {
    const data = {
      ...node,
      ...node.product,
      featuredImage: {
        ...node.featuredImage.node,
      },
    };
    return data;
  });

  return {
    props: {
      products,
    },
  };
}
